@model ShoppingCartModel
@inject IWebHelper webHelper
@inject IWorkContext workContext

<div class="order-summary-content mt-3" id="checkoutCart">
    @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_content_before" })
    <partial name="_OrderReviewData" model="Model.OrderReviewData" />
    @if (Model.Items.Any())
    {
        if (Model.Warnings.Any())
        {
    <div class="message-error">
        <ul>
            @foreach (var warning in Model.Warnings)
                    {
            <li>@warning</li>
                    }
        </ul>
    </div>
        }
    @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
    <div class="modal hide" id="pleaseWaitDialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-body">
            <div style="width:50px;margin:auto;margin-top:400px;">
                <img src="~/Content/Images/tenor.gif" style="width:50px;" />
            </div>
        </div>
    </div>
    <form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
        <div class="shopping-cart-container">
            <table class="shopping-cart" style="max-width: 100%;">
                <colgroup>
                    <col width="1">
                    <col width="1">
                    <col width="1">
                    <col>
                    <col width="1">
                    <col width="1">
                    <col width="1">
                </colgroup>
                <thead>
                    <tr>
                        @if (Model.ShowProductImages)
                            {
                        <th class="product-picture text-center">
                            @T("ShoppingCart.Image")
                        </th>
                            }
                        <th class="product text-center">
                            @T("ShoppingCart.Product(s)")
                        </th>
                        <th class="unit-price text-center">
                            @T("ShoppingCart.UnitPrice")
                        </th>
                        <th class="quantity text-center">
                            @T("ShoppingCart.Quantity")
                        </th>
                        <th class="subtotal text-center">
                            @T("ShoppingCart.ItemTotal")
                        </th>
                        <th class="subtotal text-center">
                            @T("ShoppingCart.DeleteName")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                        {
                    <tr class="item-container">
                        @if (Model.IsEditable)
                                {
                        @*<td class="remove-from-cart remove-os">
                                <input type="checkbox" id="checkbox_@(item.Id)" name="removefromcart" class="d-none checkbox-u" value="@(item.Id)">
                                <label for="checkbox_@(item.Id)">Checkbox 21</label>
                                <p class="remove">@T("Remove")</p>
                            </td>*@

                                }
                        @if (Model.ShowProductImages)
                                {
                        <td class="product-picture text-center">
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                        </td>
                                }
                        <td class="product">
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                            @if (Model.ShowSku && !String.IsNullOrEmpty(item.Sku))
                                    {
                            <span class="sku-number">@item.Sku</span>
                                    }

                            @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                    {
                            <div class="attributes small">
                                @Html.Raw(item.AttributeInfo)
                            </div>
                                    }
                            @if (!String.IsNullOrEmpty(item.AuctionInfo))
                                    {
                            <div class="attributes small">
                                @Html.Raw(item.AuctionInfo)
                            </div>
                                    }
                            @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                    {
                            <div class="recurring-info">
                                @Html.Raw(item.RecurringInfo)
                            </div>
                                    }
                            @if (!String.IsNullOrEmpty(item.ReservationInfo))
                                    {
                            <div class="rental-info">
                                @Html.Raw(@item.ReservationInfo)
                            </div>
                                    }
                            @if (Model.IsEditable && item.AllowItemEditing)
                                    {
                                        var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                        editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                            <div class="edit-item mb-1 mt-1">
                                <a class="btn btn-sm btn-secondary" href="@editCartItemUrl">@T("Common.Edit")</a>
                            </div>
                                    }
                            @if (item.Warnings.Any())
                                    {
                            <div class="message-error">
                                <ul>
                                    @foreach (var warning in item.Warnings)
                                                {
                                    <li>@warning</li>
                                                }
                                </ul>
                            </div>
                                    }
                        </td>
                        <td class="unit-price">
                            <span class="unit-price-text">@T("ShoppingCart.UnitPrice"):</span>
                            <span class="product-unit-price price">@item.UnitPrice</span>
                        </td>
                        @if (Model.IsEditable)
                                {
                                    if (item.AllowedQuantities.Count > 0)
                                    {
                        <td class="quantity">
                            <select id="itemqty@(item.Id)" name="itemqty@(item.Id)" class="custom-select form-control qty-dropdown">
                                @foreach (var qty in item.AllowedQuantities)
                                                {
                                <option id="itemqty@(item.Id)" selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                }
                            </select>
                        </td>
                                    }
                                    else
                                    {
                        <td class="quantity">
                            <div style="background-color:red;display:none;color:#ffffff;font-size:11px;clear:both;padding:5px;word-wrap:break-word" id='aciklama@(item.Id)'>
                            </div>
                            <div class="d-inline-flex">
                                <div class="minus" onclick="$(this).parent().find('.qty-input').val(function (i, oldval) { if (oldval > 1) { return --oldval; } else { return oldval } });UpdateForm()"></div>
                                <input id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input form-control text-center" onchange="UpdateForm()" />
                                <div class="plus" onclick="$(this).parent().find('.qty-input').val(function (i, oldval) { return ++oldval; });UpdateForm()"></div>
                            </div>
                        </td>
                                    }

                                }
                                else
                                {
                        <td class="quantity">
                            <input id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input-ro form-control text-center" readonly />
                        </td>
                                }
                        <td class="subtotal">
                            @if (!String.IsNullOrEmpty(item.Discount))
                                    {
                            <span class="subtotal-text">@T("ShoppingCart.ItemTotal"):</span>
                            <div class="d-flex flex-column">
                                <p class="mb-0 prod-total">@item.SubTotal</p>
                                <div class="discount text-success text-center">
                                    <span>@T("ShoppingCart.ItemYouSave"): </span>
                                    <span>@item.Discount</span>
                                </div>
                            </div>
                                    }
                                    else
                                    {
                            <span class="subtotal-text">@T("ShoppingCart.ItemTotal"):</span>
                            <p class="mb-0 prod-total">@item.SubTotal</p>
                                    }
                        </td>
                        <td>
                            <div name="delproduct" onclick="$('#itemquantity@(item.Id)').val(0);UpdateForm()" class="btn d-flex justify-content-center ml-sm-1"><i class="fa fa-trash pr-1"></i><span class="d-sm-block" style="margin-top:-4px"></span></div>
                        </td>
                    </tr>
                        }
                </tbody>
            </table>
        </div>
    </form>
    }
    else
    {
    <div class="no-data text-center">
        @T("ShoppingCart.CartIsEmpty")
    </div>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_content_after" })
</div>
<script>
    $(".removeAll-cart-button").click(function () {
        $("td.remove-from-cart .checkbox-u").click();
        $(".update-cart-button").click();
    });
    function Checkquote(productid, id) {
        var q = $("#itemquantity" + id).val();
        $.get("/AddToCart/CheckQuote?productid=" + productid + "&quantity=" + q).then((data) => {
            if (data.success == false) {
                $("#itemquantity" + id).val(data.adet);
                $("#aciklama" + id).css("display", "block");
                $("#aciklama" + id).text("Bu urunden " + data.adet + " adet satin alabilirsiniz")
            } else {
                $("#aciklama" + id).css("display", "none");
            }
            return true;
        })
    }
    function UpdateForm() {
        //$("#shopping-cart-form").submit({ "updatecart": "updatecart" }, doSomethint);
        //e.preventDefault() // prevent the form's normal submission
        $('#pleaseWaitDialog').show();
        var dataToPost = $("#shopping-cart-form").serialize();

        $.post("/ShoppingCart/UpdateCartAjax", dataToPost)
            .done(function (response, status, jqxhr) {
                $('#pleaseWaitDialog').hide();
                location.reload();
            })
            .fail(function (jqxhr, status, error) {
                $('#pleaseWaitDialog').hide();
                //location.reload();
            })
    }
</script>