@model AddressModel
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
@if (string.IsNullOrEmpty(Model.DistrictList) == false)
{
<script type="text/javascript">
    localStorage.setItem("districtlist", "@Model.DistrictList.TrimStart('"').TrimEnd('"')".replace(/&quot;/g, '"'));
</script>}
                @if (string.IsNullOrEmpty(Model.StreetList) == false)
                {
<script type="text/javascript">
        localStorage.setItem("streetlist", "@Model.StreetList.TrimStart('"').TrimEnd('"')".replace(/&quot;/g, '"'));
        localStorage.setItem("buildinglist", "@Model.BuildingList.TrimStart('"').TrimEnd('"')".replace(/&quot;/g, '"'));
        localStorage.setItem("addressselecteddistrict", "@Model.SelectedDistrict");
        localStorage.setItem("addressselectedstreet", "@Model.SelectedStreet");
        localStorage.setItem("addressselectedbuilding", "@Model.SelectedBuilding");
            localStorage.setItem("selectedCity", "@Model.CountryName".toLocaleUpperCase());
            if (JSON.parse( "@Model.BuildingList.TrimStart('"').TrimEnd('"')".replace(/&quot;/g, '"')).length>0) {
            localStorage.setItem("buildingtxt", "false");
        } else
        {
            localStorage.setItem("buildingtxt", "true");
        }
</script>}
                                <script type="text/javascript">
    var selectedCity = "",selectedCounty="";
    function clearLocalStorage() {
        localStorage.removeItem("addressselecteddistrict");
        localStorage.removeItem("addressselectedstreet");
        localStorage.removeItem("addressselectedbuilding");
        localStorage.removeItem("districtlist");
        localStorage.removeItem("streetlist");
        localStorage.removeItem("buildinglist");
        localStorage.removeItem("buildingtxt");
        localStorage.removeItem("selectedCity");
    }
    $(function () {
         $("#@Html.IdFor(model => model.DistrictName)").empty().append($("<option></option>").val("").html("Mahalle seçiniz"));
        $("#@Html.IdFor(model => model.StreetName)").empty().append($("<option></option>").val("").html("Sokak seçiniz"));
        $("#@Html.IdFor(model => model.BuildingNumber)").empty().append($("<option></option>").val("").html("Dış kapı no seçiniz"));
        $(".bn-text").hide();
        if (localStorage.getItem("selectedCity")) {
            selectedCity = localStorage.getItem("selectedCity");
            if (!localStorage.getItem("addressselecteddistrict")) {
                loadDistrict();
            }
        }
        if (localStorage.getItem("districtlist")) {
            var ddlDistricts = $("#@Html.IdFor(model => model.DistrictName)");
                ddlDistricts.html('');
                ddlDistricts.append($('<option></option>').val('').html('Mahalle seçin')).trigger('change');
                var data = JSON.parse(localStorage.getItem("districtlist"));
                $.each(data, function (id, option) {
                    ddlDistricts.append($('<option></option>').val(option.dbid).html(option.mahalle_adi));
                });
        }
        $(window.parent).on('beforeunload', function () {
            clearLocalStorage();
        });

            if (localStorage.getItem("addressselecteddistrict")) {
                var ddlDistricts = $("#@Html.IdFor(model => model.DistrictName)");
                ddlDistricts.html('');
                ddlDistricts.append($('<option></option>').val('').html('Mahalle seçin')).trigger('change');
                var data = JSON.parse(localStorage.getItem("districtlist"));
                $.each(data, function (id, option) {
                    ddlDistricts.append($('<option></option>').val(option.dbid).html(option.mahalle_adi));
                });
                ddlDistricts.val(localStorage.getItem("addressselecteddistrict"));
                var adres = $("#@Html.IdFor(model => model.DistrictName) option:selected").text();
                 $("#@Html.IdFor(model => model.Address1)").val(adres);
            }
            if (localStorage.getItem("addressselectedstreet")) {
                var ddlStreets = $("#@Html.IdFor(model => model.StreetName)");
                ddlStreets.html('');
                ddlStreets.append($('<option></option>').val('').html('Mahalle seçin')).trigger('change');
                var data = JSON.parse(localStorage.getItem("streetlist"));
                $.each(data, function (id, option) {
                    ddlStreets.append($('<option></option>').val(option.dbid).attr("data-mahalle-id", option.mahalle_id).html(option.sokak_adi));
                });
                ddlStreets.val(localStorage.getItem("addressselectedstreet"));
                var adres = $("#@Html.IdFor(model => model.DistrictName) option:selected").text() + " , " + $("#@Html.IdFor(model => model.StreetName) option:selected").text();
                $("#@Html.IdFor(model => model.Address1)").val(adres);
            }
        if (localStorage.getItem("addressselectedbuilding")) {
            var ddlNums = $("#@Html.IdFor(model => model.BuildingNumber)");
                ddlNums.html('');
                ddlNums.append($('<option></option>').val('').html('Dış kapı numarası seçin'));
            if (localStorage.getItem("buildingtxt") == "false") {
                $(".bn-select").show();
                $(".bn-text").hide();
                var data = JSON.parse(localStorage.getItem("buildinglist"));
                $.each(data, function (id, option) {
                    ddlNums.append($('<option></option>').val(option.disKapiNoFormatted).html(option.disKapiNoFormatted + (option.blokAdi != null ? " (" + option.blokAdi + ")" : "") + (option.siteAdi != null ? " (" + option.siteAdi + ")" : "")));
                });
                ddlNums.val(localStorage.getItem("addressselectedbuilding"));
            } else {
                $(".bn-select").hide();
                $(".bn-text").show();
                ddlNums.val(localStorage.getItem("addressselectedbuilding"));
                $(".bn-text").val(localStorage.getItem("addressselectedbuilding"));
            }

            var adres = $("#@Html.IdFor(model => model.DistrictName) option:selected").text() + " , " + $("#@Html.IdFor(model => model.StreetName) option:selected").text();
            $("#@Html.IdFor(model => model.Address1)").val(adres);
        }
            $("#@Html.IdFor(model => model.CountryId)").change(function () {
                loadCounty($(this).val());
                localStorage.setItem("selectedCity", $("#@Html.IdFor(model => model.CountryId) option:selected").text().toLocaleUpperCase());
                $("#@Html.IdFor(model => model.StateProvinceId)").empty().append($("<option></option>").val("").html("İlçe seçiniz"));
                $("#@Html.IdFor(model => model.DistrictName)").empty().append($("<option></option>").val("").html("Mahalle seçiniz"));
                $("#@Html.IdFor(model => model.StreetName)").empty().append($("<option></option>").val("").html("Sokak seçiniz"));
                $("#@Html.IdFor(model => model.BuildingNumber)").empty().append($("<option></option>").val("").html("Dış kapı no seçiniz"));
                event.preventDefault();
            });
            $("#@Html.IdFor(model => model.StateProvinceId)").change(function () {
                loadDistrict();
                 $("#@Html.IdFor(model => model.DistrictName)").empty().append($("<option></option>").val("").html("Mahalle seçiniz"));
                $("#@Html.IdFor(model => model.StreetName)").empty().append($("<option></option>").val("").html("Sokak seçiniz"));
                $("#@Html.IdFor(model => model.BuildingNumber)").empty().append($("<option></option>").val("").html("Dış kapı no seçiniz"));
                event.preventDefault();
        });

            $("#@Html.IdFor(model => model.DistrictName)").change(function () {
                loadStreet();
                $("#@Html.IdFor(model => model.StreetName)").empty().append($("<option></option>").val("").html("Sokak seçiniz"));
                $("#@Html.IdFor(model => model.BuildingNumber)").empty().append($("<option></option>").val("").html("Dış kapı no seçiniz"));
            localStorage.setItem("addressselecteddistrict", $(this).val());
            var adres = $("#@Html.IdFor(model => model.DistrictName) option:selected").text() + " , " + $("#@Html.IdFor(model => model.StreetName) option:selected").text();
                $("#@Html.IdFor(model => model.Address1)").val(adres);
                    event.preventDefault();

        });
            $("#@Html.IdFor(model => model.StreetName)").change(function () {
                loadBuilding();
                 $("#@Html.IdFor(model => model.BuildingNumber)").empty().append($("<option></option>").val("").html("Dış kapı no seçiniz"));
            localStorage.setItem("addressselectedstreet", $(this).val());
            var adres = $("#@Html.IdFor(model => model.DistrictName) option:selected").text() + " , " + $("#@Html.IdFor(model => model.StreetName) option:selected").text();
                $("#@Html.IdFor(model => model.Address1)").val(adres);
                    event.preventDefault();
        });
        $("#@Html.IdFor(model => model.BuildingNumber)").change(function () {
            localStorage.setItem("addressselectedbuilding", $(this).val());
                event.preventDefault();
            });
        });

    function loadCounty(selectedItem) {
                selectedCity = $("#@Html.IdFor(model => model.CountryId) option:selected").text().toLocaleUpperCase();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
        statesProgress.css("display", "block");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option value="' + option.id + '">' + option.name + '</option>'));
                        });
                        statesProgress.css("display", "none");
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
    }
    function loadDistrict() {
        var selectedItemState = $("#@Html.IdFor(model => model.StateProvinceId) option:selected").text().toLocaleUpperCase();
        var selectedItemCity = $("#@Html.IdFor(model => model.CountryId) option:selected").text().toLocaleUpperCase();
                var ddlDistricts = $("#@Html.IdFor(model => model.DistrictName)");
                var statesProgressDistrict = $("#district-loading-progress");
        statesProgressDistrict.css("display", "block");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "https://eyp.erhas.net/getdistricts?city=" + selectedItemCity + "&county=" + selectedItemState,
                    success: function (data) {
                        ddlDistricts.html('');
                        ddlDistricts.append($('<option value="">Mahalle seçin</option>'));
                        $.each(data, function (id, option) {
                            ddlDistricts.append($('<option value="' + option.dbid + '">' + option.mahalle_adi + '</option>'));
                        });
                        statesProgressDistrict.css("display", "none");
                        localStorage.setItem("districtlist", JSON.stringify(data));
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log('Failed to retrieve districts.');
                        statesProgressDistrict.hide();
                    }
                });
    }
    function loadStreet() {
         var selectedItemDistrict = $("#@Html.IdFor(model => model.DistrictName) option:selected").val();
                var ddlStreets = $("#@Html.IdFor(model => model.StreetName)");
                var statesProgressStreet = $("#street-loading-progress");
        statesProgressStreet.css("display", "block");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "https://eyp.erhas.net/getstreets?mahalle_id=" + selectedItemDistrict,
                    success: function (data) {
                        ddlStreets.html('');
                        ddlStreets.append($('<option value="">Sokak seçin</option>').val('').html('Sokak seçin'));
                        $.each(data, function (id, option) {
                            ddlStreets.append($('<option value="' + option.dbid + '" data-mahalle-id="' + option.mahalle_id + '"">' + option.sokak_adi + '</option>'));
                        });
                        statesProgressStreet.css("display", "none");
                        localStorage.setItem("streetlist", JSON.stringify(data));
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log('Failed to retrieve districts.');
                        statesProgressStreet.hide();
                    }
                });
    }
    function loadBuilding() {
         var selectedItemStreet = $("#@Html.IdFor(model => model.StreetName) option:selected").val();
                var mahalleid = $("#@Html.IdFor(model => model.StreetName) option:selected").attr("data-mahalle-id");
                var ddlNums = $("#@Html.IdFor(model => model.BuildingNumber)");
                var statesProgressBuilding = $("#building-loading-progress");
        statesProgressBuilding.css("display", "block");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "https://eyp.erhas.net/getbuildings?mahalle_id=" + mahalleid + "&sokak_id=" + selectedItemStreet,
                    success: function (data) {
                        ddlNums.html('');
                        statesProgressBuilding.css("display", "none");
                        if (data.length > 0) {
                            $(".bn-select").show();
                            $(".bn-text").hide();
                            localStorage.setItem("buildingtxt", "false");
                            ddlNums.append($('<option value="">Dış kapı no</option>'));
                            $.each(data, function (id, option) {
                                ddlNums.append($('<option value="' + option.disKapiNoFormatted + '">' + option.disKapiNoFormatted + (option.blokAdi != null ? " (" + option.blokAdi + ")" : "") + (option.siteAdi != null ? " (" + option.siteAdi + ")" : "") + '</option>'));
                            });
                            localStorage.setItem("buildinglist", JSON.stringify(data));
                        } else {
                            $(".bn-select").hide();
                            $(".bn-text").show();
                            localStorage.setItem("buildingtxt", "true");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log('Failed to retrieve districts.');
                        statesProgressBuilding.hide();
                    }
                });
    }
                                </script>}
<input asp-for="Id" type="hidden" />
<div class="edit-address row">
    <div class="form-group col-sm-12 col-md-6">
        <label asp-for="FirstName" class="col-form-label">@T("Address.Fields.FirstName"):</label>
        <input asp-for="FirstName" class="form-control" />
        <span asp-validation-for="FirstName"></span>
    </div>
    <div class="form-group col-sm-12 col-md-6">
        <label asp-for="LastName" class="col-form-label">@T("Address.Fields.LastName"):</label>
        <input asp-for="LastName" class="form-control" />
        <span asp-validation-for="LastName"></span>
    </div>
    <div class="form-group col-sm-12">
        <label asp-for="Email" class="col-form-label">@T("Address.Fields.Email"):</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email"></span>
    </div>
    @if (Model.CompanyEnabled)
    {
        <div class="form-group col-sm-12">
            <label asp-for="Company" class="col-form-label">@T("Address.Fields.Company"):</label>
            <input asp-for="Company" class="form-control" />
            <span asp-validation-for="Company"></span>
        </div>
    }
    <div class="form-group col-sm-6">
        <label asp-for="VatName" class="col-form-label">@T("Address.Fields.VatName"):</label>
        <input asp-for="VatName" class="form-control" />
        <span asp-validation-for="VatName"></span>
    </div>
    <div class="form-group col-sm-6">
        <label asp-for="VatNumber" class="col-form-label">@T("Address.Fields.VatNumber"):</label>
        <input asp-for="VatNumber" class="form-control" />
        <span asp-validation-for="VatNumber"></span>
    </div>
    @if (Model.CountryEnabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="CountryId" class="col-form-label">@T("Address.Fields.Country"):</label>
            <select asp-for="CountryId" asp-items="Model.AvailableCountries" class="custom-select form-control"></select>
            <span asp-validation-for="CountryId"></span>
        </div>
    }
    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="StateProvinceId" class="col-form-label">@T("Address.Fields.StateProvince"):</label>
            <select asp-for="StateProvinceId" class="custom-select form-control" asp-items="Model.AvailableStates"></select>
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            <span asp-validation-for="StateProvinceId"></span>
        </div>
    }
    <div class="form-group col-sm-12 col-md-6">
        <label asp-for="DistrictName" class="col-form-label">@T("Address.Fields.DistrictName"):</label>
        <select asp-for="DistrictName" class="custom-select form-control"></select>
        <span id="district-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        <span asp-validation-for="DistrictName"></span>
    </div>
    <div class="form-group col-sm-12 col-md-6">
        <label asp-for="StreetName" class="col-form-label">@T("Address.Fields.StreetName"):</label>
        <select asp-for="StreetName" class="custom-select form-control"></select>
        <span id="street-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        <span asp-validation-for="StreetName"></span>
    </div>
    <div class="form-group col-sm-12 col-md-6">
        <label asp-for="BuildingNumber" class="col-form-label">@T("Address.Fields.BuildingNumber"):</label>
        <select asp-for="BuildingNumber" class="bn-select custom-select form-control"></select>
        <input asp-for="BuildingNumber" class="bn-text form-control" />
        <span id="building-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        <span asp-validation-for="BuildingNumber"></span>
    </div>
    <div class="form-group col-sm-12 col-md-6">
        <label class="col-form-label">İç Kapı No:</label>
        <input type="text" class="form-control" asp-for="IndoorNumber" onchange="javascript: updateAdr($(this).val())" />
    </div>
    @*@if (Model.CityEnabled)
    {
        <div class="form-group col-sm-12">
            <label asp-for="City" class="col-form-label">@T("Address.Fields.City"):</label>
            <input asp-for="City" class="form-control" />
            <span asp-validation-for="City"></span>
        </div>
    }*@
    @if (Model.StreetAddressEnabled)
    {
<input type="hidden" asp-for="Address1" class="form-control" value="" />
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="Address2" class="col-form-label">@T("Address.Fields.Address2"):</label>
            <input asp-for="Address2" class="form-control" />
            <span asp-validation-for="Address2"></span>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="ZipPostalCode" class="col-form-label">@T("Address.Fields.ZipPostalCode"):</label>
            <input asp-for="ZipPostalCode" class="form-control" />
            <span asp-validation-for="ZipPostalCode"></span>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="PhoneNumber" class="col-form-label">@T("Address.Fields.PhoneNumber"):</label>
            <input asp-for="PhoneNumber" class="form-control" type="tel" maxlength="10" onkeypress="validate(event)" />
            <span asp-validation-for="PhoneNumber"></span>
        </div>
    }
    @if (Model.FaxEnabled)
    {
        <div class="form-group col-sm-12 col-md-6">
            <label asp-for="FaxNumber" class="col-form-label">@T("Address.Fields.FaxNumber"):</label>
            <input asp-for="FaxNumber" class="form-control" />
            <span asp-validation-for="FaxNumber"></span>
        </div>
    }
    @if (Model.CustomAddressAttributes.Any())
    {
        <partial name="_AddressAttributes" model="Model.CustomAddressAttributes" />
    }
</div>
<script>
    $('#ShippingNewAddress_PhoneNumber').keyup(function (e) {
        if (this.value.substring(0, 1) == "0") {
            this.value = this.value.replace(/^0+/g, '');
        }
    });
    function validate(e) {
        var a = e || window.event,
            i = a.keyCode || a.which;
        i = String.fromCharCode(i);

        var t = /[0-9]|\./;
        t.test(i) || (a.returnValue = !1, a.preventDefault && a.preventDefault())
    }
</script>