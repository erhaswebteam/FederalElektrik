<script>
    $(document).ready(function () {
        document.getElementById("kvkk_area").style.display = "none";
        $('.modal-backdrop').css("display", "none");
        document.getElementById("kvkk").style.display = "none";
        $('#kvkk').modal('hide');
    });
</script>
@using Grand.Plugin.Payments.PaymentOptions.Models;
@using System.Web;

@model PaymentOptionModel;

@{
    Layout = "";
    decimal totalDiscountMoney = Model.TotalDebit - ((Model.TotalDebit * Model.HavaleDiscountRate) / 100);

}

@{
    var errorMessages = new List<string>();
    if (TempData[string.Format("Grand.notifications.{0}", NotifyType.Error)] != null)
    {
        errorMessages.AddRange(TempData[string.Format("Grand.notifications.{0}", NotifyType.Error)] as IList<string>);
    }
    if (errorMessages != null && errorMessages.Count > 0)
    {
        <div class="col-12">
            @foreach (var error in errorMessages)
            {
                <div class="alert alert-danger" role="alert">
                    <p><i class="fa fa-exclamation-triangle fa-2x"></i><strong> @error</strong></p>
                </div>
            }
        </div>
    }
}

<form role="form" action="@Url.Action("HavalePayment")" method="post">
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group">
                <p>
                    Ödeme Havale yöntemi ile alınacaktır.
                    <br />
                    @if (Model.HavaleDiscountRate != 0)
                    {
                        <span>Sepet toplamından %@Model.HavaleDiscountRate.ToString() indirim sağlanmıştır.</span>
                    }
                    <br />
                    Toplam Tutar : <span>@Model.TotalDebit.ToString() TL</span>
                    <br />
                    @if (Model.HavaleDiscountRate != 0)
                    {
                        <span>İndirimli Tutar : @string.Format("{0:0.00}", totalDiscountMoney) TL</span>
                    }
                </p>
                @{
                    if (!string.IsNullOrEmpty(Model.BanksInfo))
                    {
                        <h3>Banka Bilgileri</h3>
                        <hr />
                        <p>@Html.Raw(Model.BanksInfo)</p>
                    }
                }
            </div> <!-- form-group.// -->
        </div>
        <div class="col-sm-12">
            <div class="form-group">
                <div class="form-inline">
                    <br />
                    <br />
                    <div class="col-sm-4">
                        <button formmethod="post" formaction="@Url.Action("CancelOrder")" class="subscribe btn btn-primary btn-block" type="submit">İptal Et</button>
                    </div>
                    <div class="col-sm-8">
                        <button class="subscribe btn btn-primary btn-block" type="submit">( @string.Format("{0:0.00}", totalDiscountMoney) TL ) Havale Olarak Tamamla</button>
                    </div>
                </div>
            </div>
        </div>
    </div> <!-- row.// -->
    @Html.HiddenFor(Model => Model.TotalDebit, new { Value = string.Format("{0:0.00}", totalDiscountMoney) })
    @Html.HiddenFor(Model => Model.OrderNumber)
</form>
