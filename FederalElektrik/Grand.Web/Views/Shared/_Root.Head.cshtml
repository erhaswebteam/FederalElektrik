@inject CommonSettings commonSettings
@inject SeoSettings seoSettings
@inject StoreInformationSettings storeInformationSettings
@{
    var displayMiniProfiler = storeInformationSettings.DisplayMiniProfilerInPublicStore;
    //X-UA-Compatible tag
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\"/>", commonSettings.XuaCompatibleValue));
    }
    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

}
<!DOCTYPE html>
<html lang="@(this.WorkingLanguage())  @(this.ShouldUseRtlTheme() ? Html.Raw(" dir=\"rtl\"") : null)">
<head>
    <title>@Html.GrandTitle(true)</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.GrandMetaDescription())" />
    <meta name="keywords" content="@(Html.GrandMetaKeywords())" />
    <meta name="generator" content="grandnode" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
    @Html.GrandHeadCustom()
    @*This is used so that themes can inject content into the header*@
    <partial name="Head" />
    @await Component.InvokeAsync("Widget", new { widgetZone = "head_html_tag" })
    @Html.GrandCssFiles(this.Url, ResourceLocation.Head)
    @Html.GrandScripts(this.Url, ResourceLocation.Head)
    @Html.GrandCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Favicon - upload favicon.ico file to the root directory*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    <link href="~/Content/custom/css/custom.css"  rel="stylesheet"/>
</head>
<body>
    <div class="shadow-layer"></div>
    @RenderBody()
    @Html.GrandCssFiles(this.Url, ResourceLocation.Footer)
    @Html.GrandScripts(this.Url, ResourceLocation.Footer)
    @*<script src="https://www.google.com/recaptcha/api.js?render=6Lcj2ggaAAAAABcwH0RakPw9l9IzBekoA7cy9VKu"></script>
    <script>
        grecaptcha.ready(function () {
            grecaptcha.execute('6Lcj2ggaAAAAABcwH0RakPw9l9IzBekoA7cy9VKu', { action: 'homepage' }).then(function (token) {

                $.ajax({
                    url: "/Home/VerifyRecaptcha?recaptchaToken=" + token, success: function (result) {
                        if (result.success) {
                            if (result.score <= 0.2) {
                                window.location.href = "@Url.Content("~/error.html")";
                            }
                        }
                        else {
                            window.location.href = "@Url.Content("~/error.html")";
                        }
                    }
                });
            });
        });
    </script>*@
</body>
</html>
