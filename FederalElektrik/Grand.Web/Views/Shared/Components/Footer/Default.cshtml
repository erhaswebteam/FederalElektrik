@model FooterModel
@inject IWorkContext workContext
<footer class="footerBgColor mt-3">
   
    <div class="container max-100 py-3">
        <div class="row flex-row">
            <div id="footer-block-information" class="col-lg-4 col-md-12 col-sm-12 footer-block information block">
                <h2 class="h4 d-none d-lg-block"><strong>@T("Footer.Information")</strong></h2>
                <div class="step-title card card-grey mb-1 p-3 d-lg-none">
                    <blockquote class="card-bodyquote">
                        <span class="fa fa-angle-down d-lg-none float-sm-right fa-2x" aria-hidden="true"></span>
                        <span class="h5"><strong>@T("Footer.Information")</strong></span>
                    </blockquote>
                </div>
                <div class="viewBox">
                    <ul class="list-group pl-0 list-pad">
                        @if (Model.SitemapEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                        }
                        <li class="list-group-item"><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    </ul>
                </div>
            </div>
            <div id="footer-block-my-account" class="col-lg-4 col-md-12 col-sm-12 footer-block my-account block">
                <h2 class="h4 d-none d-lg-block"><strong>@T("Footer.MyAccount")</strong></h2>
                <div class="step-title card card-grey mb-1 p-3 d-lg-none">
                    <blockquote class="card-bodyquote">
                        <span class="h5"><strong>@T("Footer.MyAccount")</strong></span>
                        <span class="fa fa-angle-down d-lg-none float-sm-right fa-2x" aria-hidden="true"></span>
                    </blockquote>
                </div>
                <div class="viewBox">
                    <ol class="pl-0 list-group list-pad">
                        <li class="list-group-item"><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                        <li class="list-group-item"><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                        <li class="list-group-item"><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                        @if (Model.RecentlyViewedProductsEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                        }
                        @*@if (Model.ShoppingCartEnabled)
        {
            <li class="list-group-item"><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
        }
        @if (Model.WishlistEnabled)
        {
            <li class="list-group-item"><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
        }*@
                        @if (Model.AllowCustomersToApplyForVendorAccount)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                        }
                    </ol>
                </div>
            </div>
            <div id="footer-block-customer-service" class="col-lg-4 col-md-12 col-sm-12 footer-block customer-service block">
                <h2 class="h4 d-none d-lg-block"><strong>@T("Footer.CustomerService")</strong></h2>
                <div class="step-title card card-grey mb-1 p-3 d-lg-none">
                    <blockquote class="card-bodyquote">
                        <span class="h5"><strong>@T("Footer.CustomerService")</strong></span>
                        <span class="fa fa-angle-down d-lg-none float-sm-right fa-2x"></span>
                    </blockquote>
                </div>
                <div class="viewBox">
                    <ul class="list-group pl-0 list-pad">
                        @*<li class="list-group-item"><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>*@
                        @if (Model.NewsEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                        }
                        @if (Model.BlogEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                        }
                        @if (Model.ForumEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                        }
                        @if (Model.KnowledgebaseEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Knowledgebase")">@T("Knowledgebase")</a></li>
                        }

                        @if (Model.CompareProductsEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                        }
                        @if (Model.NewProductsEnabled)
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                        {
                            <li class="list-group-item"><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                        }
                        <li><a href="@("tel:+9" + T("contact.phonenumber").Value.Replace(" ",""))"><i class="fa fa-phone fa-1x fa-rotate-90" style="font-size:14px; margin-right:8px;"></i>@T("contact.phonenumber")</a></li>
                        <li><a href="@("mailto:" + T("contact.email").Value.Replace(" ",""))"><i class="fa fa-1x fa-envelope" style="font-size:14px; margin-right:8px;"></i>@T("contact.email")</a></li>
                    </ul>
                </div>
            </div>

        </div>
        <div class="footer-lower small row mt-3">
            <div class="col-12 col-md pb-1 pt-1 flex-column text-lg-left text-center">
                <span class="footer-disclaimer text-white">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                @if (Model.DisplayTaxShippingInfoFooter)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    <span class="footer-tax-shipping">
                        @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
            </div>
            @await Component.InvokeAsync("StoreThemeSelector")
            <div class="col-12 col-md-4  pb-1 pt-1 text-center text-lg-right">
                <span class="text-white" style="font-size:15px;">Design and Powered by <a href="http://www.erhas.net" target="_blank" class="text-white">Erhas</span></a>
            </div>
            @*<div class="col-12 col-md-4  pb-1 pt-1 text-center text-lg-right">
            <a class="pr-1 text-success" href="http://www.grandNode.com/">GrandNode</a><span class="text-white">- Powered by </span><a class="text-white" href="http://www.nopcommerce.com/">nopCommerce </a>
        </div>*@
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "footer" })
</footer>
<a href="#" id="back-to-top" title="Back to top">
    <span class="fa fa-angle-up"></span>
    <span class="sr-only">back to top</span>
</a>

<style>
    .footerBgColor {
        background-color: #221D37
    }
</style>